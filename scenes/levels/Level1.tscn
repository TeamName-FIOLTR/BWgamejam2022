[gd_scene load_steps=23 format=2]

[ext_resource path="res://assets/scripts/generics/level.gd" type="Script" id=1]
[ext_resource path="res://assets/shaders/hatch.gdshader" type="Shader" id=2]
[ext_resource path="res://scenes/sound/Game Music.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/pickups/Tuna.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/art/mainTileNode.tscn" type="PackedScene" id=5]
[ext_resource path="res://scenes/puzzle elements/Button.tscn" type="PackedScene" id=6]
[ext_resource path="res://scenes/puzzle elements/Lever.tscn" type="PackedScene" id=7]
[ext_resource path="res://assets/art/background_assets/city_back2.png" type="Texture" id=8]
[ext_resource path="res://scenes/puzzle elements/DEATHLAZER.tscn" type="PackedScene" id=9]
[ext_resource path="res://scenes/enviroments/cityBox.tscn" type="PackedScene" id=10]
[ext_resource path="res://scenes/puzzle elements/LevelChangeArea.tscn" type="PackedScene" id=11]
[ext_resource path="res://scenes/entities/player/Player.tscn" type="PackedScene" id=12]
[ext_resource path="res://scenes/enviroments/trashcan.tscn" type="PackedScene" id=13]
[ext_resource path="res://scenes/puzzle elements/Metal Door.tscn" type="PackedScene" id=14]

[sub_resource type="ShaderMaterial" id=10]
shader = ExtResource( 2 )
shader_param/forground_in = Color( 1, 1, 1, 1 )
shader_param/background_in = Color( 0, 0, 0, 1 )
shader_param/forground_out = Color( 0, 0, 0, 1 )
shader_param/background_out = Color( 1, 1, 1, 1 )
shader_param/line_count = 50.0
shader_param/line_width = 0.001
shader_param/hatch_angle = 3.05
shader_param/snap_threshhold_front = 0.165
shader_param/snap_threshhold_back = 0.165

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform bool swapped = false;
uniform float frequency = 1.0;
uniform float size = 1.0;
uniform float angle_degrees = 45.0;



void vertex() {
// Output:0

}

void fragment() {
// Output:0
	vec4 original_color = texture(TEXTURE,UV);
	float angle = radians(angle_degrees);
	vec2 angle_vector = vec2(cos(angle), sin(angle));
	float thingy_value = floor(mod(-TIME*frequency+dot(SCREEN_UV, angle_vector)*size,2.0));
	vec4 new_color = vec4(thingy_value);
	new_color.a = original_color.r*original_color.a*thingy_value;
	vec4 newer_color = mix(original_color,new_color,float(swapped));
	COLOR = round(newer_color);
//	COLOR.a = original_color.r*original_color.a*thingy_value;

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 4 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

uniform bool swapped = false;
uniform float frequency = 1.0;
uniform float size = 1.0;
uniform float angle_degrees = 45.0;



void vertex() {
// Output:0

}

void fragment() {
// Output:0
	vec4 original_color = texture(TEXTURE,UV);
	float angle = radians(angle_degrees);
	vec2 angle_vector = vec2(cos(angle), sin(angle));
	float thingy_value = floor(mod(-TIME*frequency+dot(SCREEN_UV, angle_vector)*size,2.0));
	vec4 new_color = vec4(thingy_value);
	new_color.a = original_color.r*original_color.a*thingy_value;
	vec4 newer_color = mix(original_color,new_color,float(swapped));
	COLOR = round(newer_color);
//	COLOR.a = original_color.r*original_color.a*thingy_value;

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=7]
resource_local_to_scene = true
shader = SubResource( 6 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform bool swapped = false;
uniform float frequency = 1.0;
uniform float size = 1.0;
uniform float angle_degrees = 45.0;



void vertex() {
// Output:0

}

void fragment() {
// Output:0
	vec4 original_color = texture(TEXTURE,UV);
	float angle = radians(angle_degrees);
	vec2 angle_vector = vec2(cos(angle), sin(angle));
	float thingy_value = floor(mod(-TIME*frequency+dot(SCREEN_UV, angle_vector)*size,2.0));
	vec4 new_color = vec4(thingy_value);
	new_color.a = original_color.r*original_color.a*thingy_value;
	vec4 newer_color = mix(original_color,new_color,float(swapped));
	COLOR = round(newer_color);
//	COLOR.a = original_color.r*original_color.a*thingy_value;

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[node name="Level1" type="Node2D"]
position = Vector2( -54, -44 )
script = ExtResource( 1 )

[node name="CityBack2" type="Sprite" parent="." groups=["background"]]
material = SubResource( 10 )
position = Vector2( 962, 553 )
texture = ExtResource( 8 )

[node name="TileMap" parent="." instance=ExtResource( 5 )]
tile_data = PoolIntArray( -262144, 0, 196609, -196608, 0, 196616, -196607, 0, 196608, -65538, 0, 131075, -65537, 0, 131074, -131072, 0, 196613, -131071, 0, 65546, -131070, 0, 131083, -131069, 0, 131074, -131068, 0, 131074, -131067, 0, 9, -131065, 0, 8, -131064, 0, 131074, -131063, 0, 131083, -131062, 0, 131074, -131061, 0, 9, -131059, 0, 196609, -65536, 0, 65537, -65534, 0, 65539, -65531, 0, 65544, -65530, 0, 131074, -65529, 0, 65545, -65527, 0, 65537, -65525, 0, 196616, -65524, 0, 10, -65523, 0, 196618, -65522, 0, 131083, -65521, 0, 196610, 0, 0, 65537, 9, 0, 65539, 11, 0, 3, 12, 0, 65538, 14, 0, 65537, 131071, 0, 131073, 65536, 0, 196617, 65550, 0, 196616, 65551, 0, 196608, 196607, 0, 1, 131072, 0, 65536, 131086, 0, 131080, 131087, 0, 65538, 262143, 0, 3, 196608, 0, 131081, 196616, 0, 131075, 196617, 0, 131074, 196618, 0, 131074, 196619, 0, 131074, 196620, 0, 131074, 196621, 0, 131074, 196622, 0, 196619, 262144, 0, 131082, 262145, 0, 131074, 262146, 0, 131074, 262147, 0, 196610, 262158, 0, 131082, 262159, 0, 196610, 393215, 0, 131075, 327680, 0, 196619, 327694, 0, 65537, 393216, 0, 65537, 393230, 0, 196616, 393231, 0, 196608, 458752, 0, 65537, 458766, 0, 131080, 458767, 0, 65538, 589823, 0, 131075, 524288, 0, 196618, 524289, 0, 131074, 524290, 0, 131083, 524291, 0, 131074, 524292, 0, 131074, 524293, 0, 11, 524294, 0, 131072, 524295, 0, 131072, 524296, 0, 10, 524297, 0, 131074, 524298, 0, 131074, 524299, 0, 131083, 524300, 0, 131074, 524301, 0, 131074, 524302, 0, 65545, 589826, 0, 65537, 589829, 0, 3, 589830, 0, 2, 589831, 0, 2, 589832, 0, 65538, 589835, 0, 65539, 655362, 0, 65544, 655363, 0, 196610 )

[node name="Lever" parent="." instance=ExtResource( 7 )]
material = SubResource( 5 )
position = Vector2( 332, 511 )
connected_elements = [ NodePath("../DEATHLAZER"), NodePath("../Metal Door2"), NodePath("../DEATHLAZER2") ]

[node name="Button" parent="." instance=ExtResource( 6 )]
material = SubResource( 7 )
position = Vector2( 1241, 1028 )
togglable = true
connected_elements = [ NodePath("../DEATHLAZER"), NodePath("../DEATHLAZER2") ]

[node name="DEATHLAZER" parent="." instance=ExtResource( 9 )]
material = SubResource( 8 )
position = Vector2( 843, -50 )
lazer_on = false

[node name="DEATHLAZER2" parent="." instance=ExtResource( 9 )]
material = SubResource( 9 )
position = Vector2( 459, 577 )
rotation = -7.85397

[node name="AudioStreamPlayer" parent="." instance=ExtResource( 3 )]

[node name="Tuna" parent="." instance=ExtResource( 4 )]
position = Vector2( 190, 477 )

[node name="LevelChangeArea" parent="." instance=ExtResource( 11 )]
position = Vector2( 1675, 358 )
next_level = "level2"

[node name="Player" parent="." instance=ExtResource( 12 )]
position = Vector2( 361, 969 )

[node name="StaticBody2D" parent="." instance=ExtResource( 13 )]
position = Vector2( 560, 976 )
collision_layer = 0
collision_mask = 0

[node name="StaticBody2D2" parent="." instance=ExtResource( 10 )]
position = Vector2( 876, 1028 )

[node name="StaticBody2D3" parent="." instance=ExtResource( 10 )]
position = Vector2( 1328, 388 )

[node name="Metal Door2" parent="." instance=ExtResource( 14 )]
position = Vector2( 1209, 128 )
rotation = 1.57079
