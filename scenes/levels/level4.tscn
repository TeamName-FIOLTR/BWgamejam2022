[gd_scene load_steps=28 format=2]

[ext_resource path="res://assets/shaders/Tile Map Line Thiccness shader.tres" type="Material" id=1]
[ext_resource path="res://assets/art/tilemaps/simple coolio tile map.tres" type="TileSet" id=2]
[ext_resource path="res://scenes/pickups/Tuna.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/puzzle elements/DEATHLAZER.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/entities/player/Player.tscn" type="PackedScene" id=5]
[ext_resource path="res://scenes/puzzle elements/Button.tscn" type="PackedScene" id=6]
[ext_resource path="res://scenes/puzzle elements/Lever.tscn" type="PackedScene" id=7]
[ext_resource path="res://assets/scripts/generics/level.gd" type="Script" id=8]
[ext_resource path="res://assets/shaders/hatch.gdshader" type="Shader" id=9]
[ext_resource path="res://scenes/puzzle elements/LevelChangeArea.tscn" type="PackedScene" id=10]
[ext_resource path="res://scenes/sound/Game Music.tscn" type="PackedScene" id=11]
[ext_resource path="res://assets/art/background_assets/city_back2.png" type="Texture" id=12]

[sub_resource type="ShaderMaterial" id=18]
shader = ExtResource( 9 )
shader_param/forground_in = Color( 0, 0, 0, 1 )
shader_param/background_in = Color( 1, 1, 1, 1 )
shader_param/forground_out = Color( 0, 0, 0, 1 )
shader_param/background_out = Color( 1, 1, 1, 1 )
shader_param/line_count = 20.0
shader_param/line_width = 0.001
shader_param/hatch_angle = 3.05
shader_param/snap_threshhold_front = 0.165
shader_param/snap_threshhold_back = 0.165

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform bool swapped = false;
uniform float frequency = 1.0;
uniform float size = 1.0;
uniform float angle_degrees = 45.0;



void vertex() {
// Output:0

}

void fragment() {
// Output:0
	vec4 original_color = texture(TEXTURE,UV);
	float angle = radians(angle_degrees);
	vec2 angle_vector = vec2(cos(angle), sin(angle));
	float thingy_value = floor(mod(-TIME*frequency+dot(SCREEN_UV, angle_vector)*size,2.0));
	vec4 new_color = vec4(thingy_value);
	new_color.a = original_color.r*original_color.a*thingy_value;
	vec4 newer_color = mix(original_color,new_color,float(swapped));
	COLOR = round(newer_color);
//	COLOR.a = original_color.r*original_color.a*thingy_value;

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform bool swapped = false;
uniform float frequency = 1.0;
uniform float size = 1.0;
uniform float angle_degrees = 45.0;



void vertex() {
// Output:0

}

void fragment() {
// Output:0
	vec4 original_color = texture(TEXTURE,UV);
	float angle = radians(angle_degrees);
	vec2 angle_vector = vec2(cos(angle), sin(angle));
	float thingy_value = floor(mod(-TIME*frequency+dot(SCREEN_UV, angle_vector)*size,2.0));
	vec4 new_color = vec4(thingy_value);
	new_color.a = original_color.r*original_color.a*thingy_value;
	vec4 newer_color = mix(original_color,new_color,float(swapped));
	COLOR = round(newer_color);
//	COLOR.a = original_color.r*original_color.a*thingy_value;

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform bool swapped = false;
uniform float frequency = 1.0;
uniform float size = 1.0;
uniform float angle_degrees = 45.0;



void vertex() {
// Output:0

}

void fragment() {
// Output:0
	vec4 original_color = texture(TEXTURE,UV);
	float angle = radians(angle_degrees);
	vec2 angle_vector = vec2(cos(angle), sin(angle));
	float thingy_value = floor(mod(-TIME*frequency+dot(SCREEN_UV, angle_vector)*size,2.0));
	vec4 new_color = vec4(thingy_value);
	new_color.a = original_color.r*original_color.a*thingy_value;
	vec4 newer_color = mix(original_color,new_color,float(swapped));
	COLOR = round(newer_color);
//	COLOR.a = original_color.r*original_color.a*thingy_value;

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=14]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=16]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=17]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=15]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=12]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=13]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = ExtResource( 9 )
shader_param/forground_in = Color( 1, 1, 1, 1 )
shader_param/background_in = Color( 0, 0, 0, 1 )
shader_param/forground_out = Color( 0, 0, 0, 1 )
shader_param/background_out = Color( 1, 1, 1, 1 )
shader_param/line_count = 5.985
shader_param/line_width = 0.305
shader_param/hatch_angle = 2.889
shader_param/snap_threshhold_front = -0.497
shader_param/snap_threshhold_back = 0.053

[node name="level4" type="Node2D"]
script = ExtResource( 8 )

[node name="CityBack2" type="Sprite" parent="."]
material = SubResource( 18 )
position = Vector2( 530, 463 )
texture = ExtResource( 12 )

[node name="TileMap" type="TileMap" parent="."]
material = ExtResource( 1 )
tile_set = ExtResource( 2 )
cell_size = Vector2( 128, 128 )
format = 1
tile_data = PoolIntArray( -4, 0, 8, -3, 0, 131074, -2, 0, 131074, -1, 0, 131074, -65536, 0, 131074, -65535, 0, 131074, -65534, 0, 131074, -65533, 0, 131074, -65532, 0, 131074, -65531, 0, 131074, -65530, 0, 131074, -65529, 0, 131074, -65528, 0, 131074, -65527, 0, 131074, -65526, 0, 131074, -65525, 0, 9, 65532, 0, 65537, 11, 0, 65537, 131068, 0, 65537, 65547, 0, 65537, 196604, 0, 65537, 131083, 0, 65537, 262140, 0, 65537, 196608, 0, 131075, 196609, 0, 131074, 196610, 0, 131074, 196611, 0, 131074, 196612, 0, 131074, 196613, 0, 131074, 196614, 0, 131074, 196615, 0, 196610, 196619, 0, 65537, 327676, 0, 65537, 262155, 0, 65537, 393212, 0, 65537, 327691, 0, 65537, 458748, 0, 65537, 393227, 0, 65537, 524284, 0, 65544, 524285, 0, 131074, 524286, 0, 131074, 524287, 0, 131074, 458752, 0, 131074, 458753, 0, 131074, 458754, 0, 131074, 458755, 0, 131074, 458756, 0, 131074, 458757, 0, 131074, 458758, 0, 131074, 458759, 0, 131074, 458760, 0, 131074, 458761, 0, 131074, 458762, 0, 131074, 458763, 0, 65545 )

[node name="Button BL" parent="." instance=ExtResource( 6 )]
material = SubResource( 5 )
position = Vector2( -155, 889 )
collision_layer = 23
collision_mask = 0
togglable = true
connected_elements = [ NodePath("../DEATHLAZER L"), NodePath("../DEATHLAZER BRU") ]

[node name="Button TR" parent="." instance=ExtResource( 6 )]
material = SubResource( 6 )
position = Vector2( 870, 379 )
collision_layer = 15
collision_mask = 0
togglable = true
connected_elements = [ NodePath("../DEATHLAZER BLU") ]

[node name="Lever BR" parent="." instance=ExtResource( 7 )]
material = SubResource( 8 )
position = Vector2( 1182, 897 )
collision_layer = 23
collision_mask = 0
connected_elements = [ NodePath("../DEATHLAZER L") ]

[node name="Lever TL" parent="." instance=ExtResource( 7 )]
material = SubResource( 9 )
position = Vector2( 177, 382 )
collision_layer = 15
collision_mask = 0
connected_elements = [ NodePath("../DEATHLAZER BRU") ]

[node name="DEATHLAZER LD" parent="." instance=ExtResource( 4 )]
material = SubResource( 14 )
position = Vector2( 308, 471 )
collision_layers = 19

[node name="DEATHLAZER BLU" parent="." instance=ExtResource( 4 )]
material = SubResource( 16 )
position = Vector2( 208, 941 )
rotation = -3.14159
collision_layers = 11

[node name="DEATHLAZER BRU" parent="." instance=ExtResource( 4 )]
material = SubResource( 17 )
position = Vector2( 822, 941 )
rotation = -3.14159
collision_layers = 7

[node name="DEATHLAZER RD" parent="." instance=ExtResource( 4 )]
material = SubResource( 15 )
position = Vector2( 716, 467 )
collision_layers = 11

[node name="DEATHLAZER R" parent="." instance=ExtResource( 4 )]
material = SubResource( 12 )
position = Vector2( 980, 449 )
rotation = -1.57079
collision_layers = 23

[node name="DEATHLAZER L" parent="." instance=ExtResource( 4 )]
material = SubResource( 13 )
position = Vector2( 40, 449 )
rotation = -4.71238
collision_layers = 15

[node name="Tuna" parent="." instance=ExtResource( 3 )]
position = Vector2( 526, 767 )
collision_layer = 31
collision_mask = 0

[node name="Player" parent="." instance=ExtResource( 5 )]
position = Vector2( 513, 224 )

[node name="AnimatedSprite" parent="Player" index="1"]
material = SubResource( 4 )
frame = 2

[node name="LevelChangeArea" parent="." instance=ExtResource( 10 )]
position = Vector2( 522, 767 )
next_level = "level5"

[node name="AudioStreamPlayer" parent="." instance=ExtResource( 11 )]

[editable path="Player"]
