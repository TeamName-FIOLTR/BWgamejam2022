[gd_scene load_steps=29 format=2]

[ext_resource path="res://assets/shaders/Tile Map Line Thiccness shader.tres" type="Material" id=1]
[ext_resource path="res://assets/art/tilemaps/simple coolio tile map.tres" type="TileSet" id=2]
[ext_resource path="res://scenes/entities/player/Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/puzzle elements/Button.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/pickups/Tuna.tscn" type="PackedScene" id=5]
[ext_resource path="res://scenes/puzzle elements/DEATHLAZER.tscn" type="PackedScene" id=6]
[ext_resource path="res://scenes/puzzle elements/Metal Door.tscn" type="PackedScene" id=7]
[ext_resource path="res://scenes/puzzle elements/Lever.tscn" type="PackedScene" id=8]
[ext_resource path="res://assets/scripts/generics/level.gd" type="Script" id=9]
[ext_resource path="res://scenes/puzzle elements/LevelChangeArea.tscn" type="PackedScene" id=10]
[ext_resource path="res://assets/art/background_assets/city_back2.png" type="Texture" id=11]
[ext_resource path="res://assets/shaders/hatch.gdshader" type="Shader" id=12]
[ext_resource path="res://scenes/sound/Game Music.tscn" type="PackedScene" id=13]

[sub_resource type="ShaderMaterial" id=34]
shader = ExtResource( 12 )
shader_param/forground_in = Color( 0, 0, 0, 1 )
shader_param/background_in = Color( 0, 0, 0, 1 )
shader_param/forground_out = Color( 0, 0, 0, 1 )
shader_param/background_out = Color( 1, 1, 1, 1 )
shader_param/line_count = 13.093
shader_param/line_width = 0.001
shader_param/hatch_angle = 3.079
shader_param/snap_threshhold_front = 0.165
shader_param/snap_threshhold_back = 0.165

[sub_resource type="Shader" id=22]
code = "shader_type canvas_item;

uniform bool swapped = false;
uniform float frequency = 1.0;
uniform float size = 1.0;
uniform float angle_degrees = 45.0;



void vertex() {
// Output:0

}

void fragment() {
// Output:0
	vec4 original_color = texture(TEXTURE,UV);
	float angle = radians(angle_degrees);
	vec2 angle_vector = vec2(cos(angle), sin(angle));
	float thingy_value = floor(mod(-TIME*frequency+dot(SCREEN_UV, angle_vector)*size,2.0));
	vec4 new_color = vec4(thingy_value);
	new_color.a = original_color.r*original_color.a*thingy_value;
	vec4 newer_color = mix(original_color,new_color,float(swapped));
	COLOR = round(newer_color);
//	COLOR.a = original_color.r*original_color.a*thingy_value;

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=23]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=24]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=25]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=26]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform bool swapped = false;
uniform float frequency = 1.0;
uniform float size = 1.0;
uniform float angle_degrees = 45.0;



void vertex() {
// Output:0

}

void fragment() {
// Output:0
	vec4 original_color = texture(TEXTURE,UV);
	float angle = radians(angle_degrees);
	vec2 angle_vector = vec2(cos(angle), sin(angle));
	float thingy_value = floor(mod(-TIME*frequency+dot(SCREEN_UV, angle_vector)*size,2.0));
	vec4 new_color = vec4(thingy_value);
	new_color.a = original_color.r*original_color.a*thingy_value;
	vec4 newer_color = mix(original_color,new_color,float(swapped));
	COLOR = round(newer_color);
//	COLOR.a = original_color.r*original_color.a*thingy_value;

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=27]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform bool swapped = false;
uniform float frequency = 1.0;
uniform float size = 1.0;
uniform float angle_degrees = 45.0;



void vertex() {
// Output:0

}

void fragment() {
// Output:0
	vec4 original_color = texture(TEXTURE,UV);
	float angle = radians(angle_degrees);
	vec2 angle_vector = vec2(cos(angle), sin(angle));
	float thingy_value = floor(mod(-TIME*frequency+dot(SCREEN_UV, angle_vector)*size,2.0));
	vec4 new_color = vec4(thingy_value);
	new_color.a = original_color.r*original_color.a*thingy_value;
	vec4 newer_color = mix(original_color,new_color,float(swapped));
	COLOR = round(newer_color);
//	COLOR.a = original_color.r*original_color.a*thingy_value;

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=28]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=29]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=30]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=31]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=32]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[sub_resource type="ShaderMaterial" id=33]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/swapped = false
shader_param/frequency = 5.956
shader_param/size = 417.389
shader_param/angle_degrees = 45.0

[node name="level5" type="Node2D"]
script = ExtResource( 9 )

[node name="CityBack2" type="Sprite" parent="."]
material = SubResource( 34 )
position = Vector2( 765, 289 )
scale = Vector2( 0.936691, 0.936691 )
texture = ExtResource( 11 )

[node name="TileMap" type="TileMap" parent="."]
material = ExtResource( 1 )
tile_set = ExtResource( 2 )
cell_size = Vector2( 128, 128 )
format = 1
tile_data = PoolIntArray( -65540, 0, 8, -65539, 0, 131074, -65538, 0, 131074, -65537, 0, 131074, -131072, 0, 131074, -131071, 0, 131074, -131070, 0, 131074, -131069, 0, 131074, -131068, 0, 131074, -131067, 0, 131074, -131066, 0, 131074, -131065, 0, 131074, -131064, 0, 131074, -131063, 0, 131074, -131062, 0, 9, -4, 0, 65537, -65526, 0, 65537, 65532, 0, 65537, 10, 0, 65537, 131068, 0, 65537, 65546, 0, 65537, 196604, 0, 65537, 131082, 0, 65537, 262140, 0, 131082, 262141, 0, 131074, 262142, 0, 131074, 262143, 0, 131074, 196608, 0, 131074, 196609, 0, 131074, 196610, 0, 131074, 196611, 0, 196610, 196618, 0, 65537, 327676, 0, 65537, 262154, 0, 65537, 393212, 0, 65537, 327690, 0, 65537, 458748, 0, 65544, 458749, 0, 131074, 458750, 0, 131074, 458751, 0, 131074, 393216, 0, 131074, 393217, 0, 131074, 393218, 0, 131074, 393219, 0, 131074, 393220, 0, 131074, 393221, 0, 131074, 393222, 0, 131074, 393223, 0, 131074, 393224, 0, 131074, 393225, 0, 131074, 393226, 0, 65545 )

[node name="Player" parent="." instance=ExtResource( 3 )]
position = Vector2( 436, 295 )

[node name="Metal Door" parent="." instance=ExtResource( 7 )]
position = Vector2( -28.611, 512 )
rotation = 1.57079

[node name="Tuna" parent="." instance=ExtResource( 5 )]
position = Vector2( -222, 653 )

[node name="DEATHLAZER" parent="." instance=ExtResource( 6 )]
material = SubResource( 23 )
position = Vector2( 260, -168 )
collision_layers = 7

[node name="DEATHLAZER2" parent="." instance=ExtResource( 6 )]
material = SubResource( 24 )
position = Vector2( 134, -168 )
collision_layers = 27

[node name="DEATHLAZER3" parent="." instance=ExtResource( 6 )]
material = SubResource( 25 )
position = Vector2( 0, -168 )
collision_layers = 19

[node name="DEATHLAZER4" parent="." instance=ExtResource( 6 )]
material = SubResource( 26 )
position = Vector2( -135, -168 )
collision_layers = 15

[node name="Lever" parent="." instance=ExtResource( 8 )]
material = SubResource( 27 )
position = Vector2( -293, 386 )
connected_elements = [ NodePath("../Metal Door"), NodePath("../DEATHLAZER"), NodePath("../DEATHLAZER2"), NodePath("../DEATHLAZER3"), NodePath("../DEATHLAZER4"), NodePath("../DEATHLAZER5"), NodePath("../DEATHLAZER6"), NodePath("../DEATHLAZER7"), NodePath("../DEATHLAZER8") ]

[node name="Button" parent="." instance=ExtResource( 4 )]
material = SubResource( 28 )
position = Vector2( 827, 776 )
togglable = true
connected_elements = [ NodePath("../DEATHLAZER4"), NodePath("../DEATHLAZER2"), NodePath("../DEATHLAZER5"), NodePath("../DEATHLAZER7"), NodePath("../DEATHLAZER8") ]

[node name="Button2" parent="." instance=ExtResource( 4 )]
material = SubResource( 29 )
position = Vector2( 1055, 764 )
togglable = true
connected_elements = [ NodePath("../DEATHLAZER3"), NodePath("../DEATHLAZER2"), NodePath("../DEATHLAZER5"), NodePath("../DEATHLAZER6"), NodePath("../DEATHLAZER7") ]

[node name="DEATHLAZER5" parent="." instance=ExtResource( 6 )]
material = SubResource( 30 )
position = Vector2( 63, 820 )
rotation = -3.14159
collision_layers = 7

[node name="DEATHLAZER6" parent="." instance=ExtResource( 6 )]
material = SubResource( 31 )
position = Vector2( 198, 820 )
rotation = -3.14159
collision_layers = 15

[node name="DEATHLAZER7" parent="." instance=ExtResource( 6 )]
material = SubResource( 32 )
position = Vector2( 323, 820 )
rotation = -3.14159
collision_layers = 3

[node name="DEATHLAZER8" parent="." instance=ExtResource( 6 )]
material = SubResource( 33 )
position = Vector2( 447, 820 )
rotation = -3.14159
collision_layers = 19

[node name="LevelChangeArea" parent="." instance=ExtResource( 10 )]
position = Vector2( -227, 743 )
next_level = "level6"

[node name="AudioStreamPlayer" parent="." instance=ExtResource( 13 )]
