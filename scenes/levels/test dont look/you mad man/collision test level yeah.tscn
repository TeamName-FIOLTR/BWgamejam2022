[gd_scene load_steps=13 format=2]

[ext_resource path="res://scenes/entities/player/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]
[ext_resource path="res://scenes/enviroments/DEATHLAZER.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/enviroments/Basic Swap Box.tscn" type="PackedScene" id=4]

[sub_resource type="RectangleShape2D" id=1]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;
uniform float thingy = 0.9;
uniform vec2 scale_thing = vec2(1.0);


void vertex() {
// Output:0

}

void fragment() {
// Output:0
	float x = UV.x-0.5;
	float y = UV.y-0.5;
	float thing = float(!((abs(x*scale_thing.x)<=thingy)&&(abs(y*scale_thing.y)<=thingy)));
//	SCREEN_PIXEL_SIZE
//	vec3 thing_vec = vec3()
	COLOR.rgb = vec3(thing);

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/thingy = 0.318
shader_param/scale_thing = Vector2( 0.664, 1 )

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Output:0
	COLOR.r = 0.0;

}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 9 )

[sub_resource type="QuadMesh" id=4]
material = SubResource( 3 )
size = Vector2( 20, 20 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform vec4 forground_in : hint_color = vec4(1.0,1.0,1.0,1.0);
uniform vec4 background_in : hint_color = vec4(0.0,0.0,0.0,1.0);

uniform vec4 forground_out : hint_color = vec4(1.0,1.0,1.0,1.0);
uniform vec4 background_out : hint_color = vec4(0.0,0.0,0.0,1.0);

uniform float line_count = 100;
uniform float line_width = 0.006;
uniform float hatch_angle = 3.05;
uniform float snap_threshhold_front = 0.165;
uniform float snap_threshhold_back = 0.165;
float distance_squared(vec4 a,vec4 b) {
	return (a.r - b.r)*(a.r-b.r) + (a.g-b.g)*(a.g-b.g) + (a.b-b.b)*(a.b-b.b);
}
vec2 rotate(float angle,vec2 input) {	
	return mat2(vec2(cos(hatch_angle),cos(hatch_angle+ 1.57079632679)),
						vec2(sin(hatch_angle ),sin(hatch_angle + 1.57079632679)))*input;
}
bool do_line(float x,float lineCount,float lineWidth) {
	return mod(x,1.0/lineCount) <= lineWidth;//(1.0/line_count)/1.1;
}
vec4 color_snap(vec4 incolor, vec4 snap1, vec4 snap2,vec4 snapout1,vec4 snapout2){
	if (distance_squared(incolor,snap1) < distance_squared(incolor,snap2)) {
		return snapout1;
	}
	return snapout2;
}
void fragment() {
	vec4 original_color = texture(TEXTURE,UV);
	COLOR = color_snap(COLOR,forground_in,background_in,
							forground_out,background_out);
	
	vec2 rotated_uv = rotate(hatch_angle,UV);
	float distance_to_front = distance_squared(original_color,forground_in);
	float distance_to_back = distance_squared(original_color,background_in);
	
	if (distance_to_front > snap_threshhold_front || distance_to_back > snap_threshhold_back) {
		if ((do_line(rotated_uv.x,distance_to_front*distance_to_front*line_count,line_width) || 
			do_line(rotated_uv.y,distance_to_front*distance_to_front*line_count,line_width))) {
				COLOR = background_out;}
		else{
			COLOR = forground_out;
		}
	}
	
	
	COLOR.a = original_color.a;
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/forground_in = Color( 0, 1, 0.913725, 1 )
shader_param/background_in = Color( 0.309804, 0, 0.847059, 1 )
shader_param/forground_out = Color( 0, 0, 0, 1 )
shader_param/background_out = Color( 1, 1, 1, 1 )
shader_param/line_count = 53.419
shader_param/line_width = 0.018
shader_param/hatch_angle = 2.863
shader_param/snap_threshhold_front = 0.628
shader_param/snap_threshhold_back = 0.72

[node name="collision test level yeah" type="Node2D"]

[node name="Player" parent="." instance=ExtResource( 1 )]
position = Vector2( 256, 233 )
gravity = Vector2( 0, 1000 )
jump_gravity = 1.415
drop_gravity = 5.476
jump_speed = 1000.0
jump_time_max = 1.0
jump_cache_time = 100.0

[node name="StaticBody2D" type="StaticBody2D" parent="."]
position = Vector2( 306, 319 )
scale = Vector2( 16.4807, 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
shape = SubResource( 1 )

[node name="MeshInstance2D" type="MeshInstance2D" parent="StaticBody2D"]
material = SubResource( 8 )
mesh = SubResource( 4 )

[node name="StaticBody2D2" type="StaticBody2D" parent="."]
position = Vector2( 472, 452 )
scale = Vector2( 16.4807, 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D2"]
shape = SubResource( 1 )

[node name="MeshInstance2D" type="MeshInstance2D" parent="StaticBody2D2"]
material = SubResource( 8 )
mesh = SubResource( 4 )

[node name="StaticBody2D3" type="StaticBody2D" parent="."]
position = Vector2( 781, 609 )
scale = Vector2( 16.4807, 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D3"]
shape = SubResource( 1 )

[node name="MeshInstance2D" type="MeshInstance2D" parent="StaticBody2D3"]
material = SubResource( 8 )
mesh = SubResource( 4 )

[node name="StaticBody2D4" type="StaticBody2D" parent="."]
position = Vector2( 1321, 328 )
scale = Vector2( 16.4807, 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D4"]
shape = SubResource( 1 )

[node name="MeshInstance2D" type="MeshInstance2D" parent="StaticBody2D4"]
material = SubResource( 8 )
mesh = SubResource( 4 )

[node name="StaticBody2D5" type="StaticBody2D" parent="."]
position = Vector2( 669, 889 )
scale = Vector2( 179.567, 2.5253 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D5"]
shape = SubResource( 1 )

[node name="MeshInstance2D" type="MeshInstance2D" parent="StaticBody2D5"]
material = SubResource( 8 )
mesh = SubResource( 4 )

[node name="Icon" type="Sprite" parent="."]
material = SubResource( 6 )
position = Vector2( 369, 152 )
texture = ExtResource( 2 )

[node name="DEATHLAZER" parent="." instance=ExtResource( 3 )]
position = Vector2( 1045, 67 )

[node name="Basic Swap Box" parent="." instance=ExtResource( 4 )]
position = Vector2( 860, 548 )
scale = Vector2( 0.186628, 0.186628 )
collision_layer = 11
collision_mask = 0

[node name="Basic Swap Box2" parent="." instance=ExtResource( 4 )]
position = Vector2( 1032, 432 )
scale = Vector2( 0.186628, 0.186628 )
collision_layer = 19
collision_mask = 0

[node name="Basic Swap Box3" parent="." instance=ExtResource( 4 )]
position = Vector2( 420, 260 )
scale = Vector2( 0.186628, 0.186628 )
collision_layer = 11
collision_mask = 0
